{{/*
Copyright (c) HashiCorp, Inc.
SPDX-License-Identifier: MPL-2.0
*/}}

{{ template "vault.mode" . }}
{{- if ne .mode "external" }}
{{- template "vault.serverServiceEnabled" . -}}
{{- if .serverServiceEnabled -}}
# Service for Vault cluster
apiVersion: v1
kind: Service
metadata:
  name: {{ template "vault.fullname" . }}
  namespace: {{ include "vault.namespace" . }}
  labels:
    helm.sh/chart: {{ include "vault.chart" . }}
    app.kubernetes.io/name: {{ include "vault.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
{{ template "vault.service.annotations" .}}
spec:
  {{- if .Values.server.service.type}}
  type: {{ .Values.server.service.type }}
  {{- end}}
  {{- if (semverCompare ">= 1.23-0" .Capabilities.KubeVersion.Version) }}
  {{- if .Values.server.service.ipFamilyPolicy }}
  ipFamilyPolicy: {{ .Values.server.service.ipFamilyPolicy }}
  {{- end }}
  {{- if .Values.server.service.ipFamilies }}
  ipFamilies: {{ .Values.server.service.ipFamilies | toYaml | nindent 2 }}
  {{- end }}
  {{- end }}
  {{- if .Values.server.service.clusterIP }}
  clusterIP: {{ .Values.server.service.clusterIP }}
  {{- end }}
  {{- include "service.externalTrafficPolicy" .Values.server.service }}
  # We want the servers to become available even if they're not ready
  # since this DNS is also used for join operations.
  publishNotReadyAddresses: {{ .Values.server.service.publishNotReadyAddresses }}
  ports:
    - name: {{ include "vault.scheme" . }}
      port: {{ .Values.server.service.port }}
      targetPort: {{ .Values.server.service.targetPort }}
      {{- if and (.Values.server.service.nodePort) (eq (.Values.server.service.type | toString) "NodePort") }}
      nodePort: {{ .Values.server.service.nodePort }}
      {{- end }}
    - name: https-internal
      port: 8201
      targetPort: 8201
  selector:
    app.kubernetes.io/name: {{ include "vault.name" . }}
    {{- if eq (.Values.server.service.instanceSelector.enabled | toString) "true" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- end }}
    component: server
{{- if .Values.server.service.createServicePerPod}}
---
{{ $chart := include "vault.chart" . }}
{{ $vaultName := include "vault.name" . }}
{{ $vaultScheme := include "vault.scheme" . }}
{{ $namespace :=  include "vault.namespace" . }}
{{ $releaseName :=  .Release.Name }}
{{ $releaseService :=  .Release.Service }}
{{ $values :=  .Values }}

# Service per pod
{{ range $i, $e := until (.Values.server.ha.replicas | int) }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $vaultName }}-{{ $i }}
  namespace: {{ $namespace }}
  labels:
    helm.sh/chart: {{ $chart }}
    app.kubernetes.io/name: {{ $vaultName }}
    app.kubernetes.io/instance: {{ $releaseName }}
    app.kubernetes.io/managed-by: {{ $releaseService }}
  {{- if $values.server.service.servicePerPodExternalDnsAnnotationsDomain }}
  annotations:
    external-dns.alpha.kubernetes.io/internal-hostname: {{ $vaultName }}-{{ $i }}-pod-ns-{{ $namespace }}.{{ $values.server.service.servicePerPodExternalDnsAnnotationsDomain }}
  {{- end }}
spec:
  selector:
    app.kubernetes.io/name: {{ $vaultName }}
    {{- if eq ($values.server.service.instanceSelector.enabled | toString) "true" }}
    app.kubernetes.io/instance: {{ $releaseName }}
    {{- end }}
    statefulset.kubernetes.io/pod-name: {{ printf "%s-%d" $releaseName $i }}
    component: server
  ports:
    - name: {{ $vaultScheme }}
      port: 8200
      targetPort: {{ $values.server.service.targetPort }}
      {{- if and ($values.server.service.nodePort) (eq ($values.server.service.type | toString) "NodePort") }}
      nodePort: {{ $values.server.service.nodePort }}
      {{- end }}
    - name: https-internal
      port: 8201
      targetPort: 8201
{{ end }}
{{- end}}
{{- end }}
{{- end }}

